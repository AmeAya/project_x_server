version: '3'

services:
    nginx:
        restart: always
        image: nginx:1.23-alpine
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./data/nginx:/etc/nginx/conf.d
            - static_volume:/app/project_x/static
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    certbot:
        image: certbot/certbot
        volumes:
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    server:
        restart: unless-stopped
        build:
            context: .
            dockerfile: data/backend/Dockerfile
        entrypoint: /app/data/backend/server-entrypoint.sh
        volumes:
            - static_volume:/app/project_x/static
        expose:
            - 8000
        environment:
            DEBUG: "True"
            CELERY_BROKER_URL: "redis://redis:6379/0"
            CELERY_RESULT_BACKEND: "redis://redis:6379/0"
            DJANGO_DB: postgresql
            POSTGRES_HOST: db
            POSTGRES_NAME: project_x_db
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_PORT: 2345
    worker:
        restart: unless-stopped
        build:
            context: .
            dockerfile: data/backend/Dockerfile
        entrypoint: /app/data/backend/worker-entrypoint.sh
        volumes:
            - static_volume:/app/project_x/static
        environment:
            DEBUG: "True"
            CELERY_BROKER_URL: "redis://redis:6379/0"
            CELERY_RESULT_BACKEND: "redis://redis:6379/0"
            DJANGO_DB: postgresql
            POSTGRES_HOST: db
            POSTGRES_NAME: project_x_db
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_PORT: 2345
        depends_on:
            - server
            - redis
    redis:
        restart: unless-stopped
        image: redis:7.0.5-alpine
        expose:
            - 6379
    db:
        image: postgres:13.0-alpine
        restart: unless-stopped
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        environment:
            POSTGRES_DB: project_x_db
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        expose:
            - 2345
        ports:
            - 2345:2345
        command: -p 2345

volumes:
    static_volume: {}
    postgres_data: {}